name: c9
services:
  stokvel-mock-ase:
    hostname: stokvel-wallet
    image: rafiki-mock-ase
    build:
      context: ../..
      dockerfile: ./localenv/mock-account-servicing-entity/Dockerfile
    restart: always
    networks:
      - rafiki
    ports:
      - '3030:3300'
    environment:
      LOG_LEVEL: debug
      PORT: 80
      SEED_FILE_LOCATION: /workspace/seed.yml
      KEY_FILE: /workspace/private-key.pem
      OPEN_PAYMENTS_URL: ${STOKVEL_OPEN_PAYMENTS_URL:-https://stokvel-wallet-backend}
      AUTH_SERVER_DOMAIN: ${STOKVEL_AUTH_SERVER_DOMAIN:-http://localhost:3006}
      TESTNET_AUTOPEER_URL: ${TESTNET_AUTOPEER_URL}
      GRAPHQL_URL: http://stokvel-wallet-backend:3001/graphql
      SIGNATURE_VERSION: 1
      SIGNATURE_SECRET: iyIgCprjb9uL8wFckR+pLEkJWMB7FJhgkvqhTQR/964=
      IDP_SECRET: 2pEcn2kkCclbOHQiGNEwhJ0rucATZhrA807HTm2rNXE=
      DISPLAY_NAME: Vote with your wallet
      DISPLAY_ICON: wallet-icon.svg
    volumes:
      - ../stokvel/seed.yml:/workspace/seed.yml
      - ../stokvel/private-key.pem:/workspace/private-key.pem
    depends_on:
      stokvel-backend:
        condition: service_healthy

  stokvel-backend:
    hostname: stokvel-wallet-backend
    image: rafiki-backend
    build:
      context: ../..
      dockerfile: ./packages/backend/Dockerfile.dev
    volumes:
      - type: bind
        source: ../../packages/backend/src
        target: /home/rafiki/packages/backend/src
        read_only: true
    restart: always
    privileged: true
    ports:
      - '3000:80'
      - '3001:3001'
      - '3002:3002'
      - "9229:9229"
    networks:
      - rafiki
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      INSTANCE_NAME: stokvel
      TRUST_PROXY: ${TRUST_PROXY}
      LOG_LEVEL: debug
      ADMIN_PORT: 3001
      CONNECTOR_PORT: 3002
      OPEN_PAYMENTS_PORT: 80
      DATABASE_URL: postgresql://stokvel_wallet_backend:stokvel_wallet_backend@shared-database/stokvel_wallet_backend
      USE_TIGERBEETLE: ${USE_TIGERBEETLE-false}
      TIGERBEETLE_CLUSTER_ID: ${TIGERBEETLE_CLUSTER_ID-0}
      TIGERBEETLE_REPLICA_ADDRESSES: ${TIGERBEETLE_REPLICA_ADDRESSES-''}
      AUTH_SERVER_GRANT_URL: ${STOKVEL_AUTH_SERVER_DOMAIN:-http://stokvel-wallet-auth:3006}
      AUTH_SERVER_INTROSPECTION_URL: http://stokvel-wallet-auth:3007
      ILP_ADDRESS: ${ILP_ADDRESS:-test.stokvel-wallet}
      STREAM_SECRET: BjPXtnd00G2mRQwP/8ZpwyZASOch5sUXT5o0iR5b5wU=
      API_SECRET: iyIgCprjb9uL8wFckR+pLEkJWMB7FJhgkvqhTQR/964=
      OPEN_PAYMENTS_URL: ${STOKVEL_OPEN_PAYMENTS_URL:-http://stokvel-wallet-backend}
      WEBHOOK_URL: http://stokvel-wallet/webhooks
      EXCHANGE_RATES_URL: http://stokvel-wallet/rates
      REDIS_URL: redis://shared-redis:6379/0
      WALLET_ADDRESS_URL: ${STOKVEL_WALLET_ADDRESS_URL:-https://stokvel-wallet-backend/.well-known/pay}
      ILP_CONNECTOR_URL: ${STOKVEL_CONNECTOR_URL:-http://stokvel-wallet-backend:3002}
      ENABLE_TELEMETRY: true
      KEY_ID: 7097F83B-CB84-469E-96C6-2141C72E22C0
    depends_on:
      - shared-database
      - shared-redis
    healthcheck:
      test: [ "CMD", "wget", "--header=apollo-require-preflight: true", "http://localhost:3001/graphql?query=%7B__typename%7D", "-O", "/dev/null" ]
      start_period: 60s
      start_interval: 5s
      interval: 30s
      retries: 1
      timeout: 3s

  stokvel-auth:
    hostname: stokvel-wallet-auth
    image: rafiki-auth
    build:
      context: ../..
      dockerfile: ./packages/auth/Dockerfile.dev
    volumes:
      - type: bind
        source: ../../packages/auth/src
        target: /home/rafiki/packages/auth/src
        read_only: true
    restart: always
    networks:
      - rafiki
    ports:
      - '3003:3003'
      - '3006:3006'
      - "9230:9229"
      - '3009:3009'
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      TRUST_PROXY: ${TRUST_PROXY}
      AUTH_DATABASE_URL: postgresql://stokvel_wallet_auth:stokvel_wallet_auth@shared-database/stokvel_wallet_auth
      AUTH_SERVER_URL: ${STOKVEL_AUTH_SERVER_DOMAIN:-http://localhost:3006}
      REDIS_URL: redis://shared-redis:6379/1
      IDENTITY_SERVER_URL: http://localhost:3030/mock-idp/
      IDENTITY_SERVER_SECRET: 2pEcn2kkCclbOHQiGNEwhJ0rucATZhrA807HTm2rNXE=
      COOKIE_KEY: 42397d1f371dd4b8b7d0308a689a57c882effd4ea909d792302542af47e2cd37
      ADMIN_API_SECRET: rPoZpe9tVyBNCigm05QDco7WLcYa0xMao7lO5KG1XG4=
    depends_on:
      - shared-database
      - shared-redis

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "9999:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password

  shared-database:
    image: 'postgres:15' # use latest official postgres version
    restart: unless-stopped
    networks:
      - rafiki
    volumes:
      - database-data2:/var/lib/postgresql/data/ # persist data even if container shuts down
      - ../stokvel/dbinit.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres

  shared-redis:
    image: 'redis:7'
    restart: unless-stopped
    networks:
      - rafiki

  stokvel-admin:
    hostname: stokvel-wallet-admin
    image: rafiki-frontend
    build:
      context: ../..
      dockerfile: ./packages/frontend/Dockerfile.dev
    volumes:
      - type: bind
        source: ../../packages/frontend/app
        target: /home/rafiki/packages/frontend/app
        read_only: true
    restart: always
    networks:
      - rafiki
    ports:
      - '3010:3010'
    environment:
      PORT: 3010
      LOG_LEVEL: debug
      NODE_ENV: ${NODE_ENV:-development}
      GRAPHQL_URL: http://stokvel-wallet-backend:3001/graphql
      OPEN_PAYMENTS_URL: https://stokvel-wallet-backend/
      ENABLE_INSECURE_MESSAGE_COOKIE: true
      AUTH_ENABLED: false
      SIGNATURE_VERSION: 1
      SIGNATURE_SECRET: iyIgCprjb9uL8wFckR+pLEkJWMB7FJhgkvqhTQR/964=
    depends_on:
      - stokvel-backend

volumes:
  database-data2: # named volumes can be managed easier using docker-compose
